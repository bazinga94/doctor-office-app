# Network policy for the frontend namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-policy
  namespace: frontend
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress: []  # Block all incoming traffic to the frontend
  egress:
  # Allow DNS queries
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
    ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
  # Allow communication only to the backend
  - to:
    - namespaceSelector:
        matchLabels:
          name: backend
    ports:
    - port: 3000

---
# Network policy for the backend namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-policy
  namespace: backend
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow communication only from the frontend
  - from:
    - namespaceSelector:
        matchLabels:
          name: frontend
    ports:
    - port: 3000
  egress:
  # Allow communication only to the database
  - to:
    - namespaceSelector:
        matchLabels:
          name: database  # Database namespace
    ports:
    - port: 27017  # Example using MongoDB port

---
# Network policy for the database namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: database-policy
  namespace: database
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  # Allow communication only from the backend
  - from:
    - namespaceSelector:
        matchLabels:
          name: backend
    ports:
    - port: 27017  # Example using MongoDB port
